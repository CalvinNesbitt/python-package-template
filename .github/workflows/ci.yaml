# Workflow to lint and test development branch, uses environment 'ci'

name: CI-Linting-And-Tests

on:
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Install repo
        run: |
          pip install -e .[dev]
      - name: Lint with precommit
        run: |
          pre-commit run --all-files

  run-tests:
    runs-on: ubuntu-latest
    environment: ci

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

      - name: Sleep for 5 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: "5s"

      - name: Install repo
        run: |
          pip install -e .[dev]

      - name: Test with pytest and capture coverage
        run: |
          pytest --cov=tz --cov-report=json:coverage.json --junitxml=test.xml

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          comment_mode: off
          files: |
            test.xml

      - name: Update Coverage Badge
        run: |
          COVERAGE="$(jq -r '.totals.percent_covered_display' coverage.json)"
          echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
          IFS='/' read -ra PATHS <<< "$REF"
          echo "BRANCH=$(echo ${PATHS[1]}_${PATHS[2]})" >> $GITHUB_ENV
      - name: Create the Badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ vars.GIST_TOKEN }}
          gistID: 5f6ae8b5a38d79248d55864560f13fd6
          filename: feo-core__${{ env.BRANCH }}.json
          label: Test Coverage
          message: ${{ env.COVERAGE }}%
          valColorRange: ${{ env.COVERAGE }}
          maxColorRange: 100
          minColorRange: 0
